name: cmake-build

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-22.04
          boost_platform_version: 22.04
          boost_toolset: gcc
          boost_arch: x86
        - os: macos-13
          boost_platform_version: 13
          boost_toolset: clang
          boost_arch: x86
        - os: macos-14
          boost_platform_version: 14
          boost_toolset: clang
          boost_arch: aarch64
        - os: windows-2022
          boost_platform_version: 2022
          boost_toolset: msvc
          boost_arch: x86
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v6

    - name: Create Build Directory 
      working-directory: ${{ github.workspace }}
      shell: bash
      run: mkdir -p "${{ runner.workspace }}/build"
      
    - name: Unzip IDA SDK
      working-directory: ${{ github.workspace }}
      env:
        IDASDK_SECRET: ${{ secrets.IDASDK_SECRET }}
      if: env.IDASDK_SECRET != ''
      run: |
        ./.github/scripts/decrypt_secret.sh
        unzip -q "${{ runner.workspace }}/build/idasdk_teams82.zip" \
              -d "${{ runner.workspace }}/build/"

    - name: Enable Developer Command Prompt (Windows)
      if: matrix.os == 'windows-2022'
      uses: ilammy/msvc-dev-cmd@v1.12.1

    - name: Install Boost
      uses: MarkusJx/install-boost@v2
      id: install-boost
      with:
        arch: ${{ matrix.boost_arch }}
        boost_version: 1.83.0
        platform_version: ${{ matrix.boost_platform_version }}
        toolset: ${{ matrix.boost_toolset }}

    - name: Enable mold linker (Linux)
      if: matrix.os == 'ubuntu-22.04'
      uses: rui314/setup-mold@v1

    - name: Configure CMake
      working-directory: ${{ runner.workspace }}/build
      env:
        BOOST_ROOT: ${{steps.install-boost.outputs.BOOST_ROOT}}
      shell: bash
      run: |
        cmake "${{ github.workspace }}" -G Ninja \
          "-DCMAKE_BUILD_TYPE=${BUILD_TYPE}" \
          "-DBINEXPORT_ENABLE_IDAPRO=${{ vars.BINEXPORT_ENABLE_IDAPRO == 'OFF' && 'OFF' || 'ON'}}" \
          "-DIdaSdk_ROOT_DIR=${{ runner.workspace }}/build/idasdk_teams82" \
          "-DBINEXPORT_ENABLE_BINARYNINJA=ON" \
          "-DBINEXPORT_BINARYNINJA_CHANNEL=stable" \
          "-DBoost_INCLUDE_DIR=${{steps.install-boost.outputs.BOOST_ROOT}}/include"

    - name: Build
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: cmake --build . --config "${BUILD_TYPE}"

    - name: Test
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: ctest --build-config "${BUILD_TYPE}" --output-on-failure -R '^[A-Z]'

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: BinExport-${{ runner.os }}-${{ runner.arch }}
        path: |
          ${{ runner.workspace }}/build/binaryninja/binexport*
          ${{ runner.workspace }}/build/ida/binexport*
          ${{ runner.workspace }}/build/tools/binexport2dump*
